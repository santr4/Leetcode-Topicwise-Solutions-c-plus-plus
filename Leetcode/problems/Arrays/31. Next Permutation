class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();

        // find the break point
        int ind = -1;
        for(int i = 0;i < n-1;i++){
          if(nums[i] < nums[i+1]){
            ind = i;
          }
        }

        // if there is no next permutation
        if(ind == -1){
          reverse(nums.begin(),nums.end());
          return;
        }

        // swap the break point with the just greater number in the right half
        int l = ind+1;
        for(int i = ind+1;i < n;i++){
          if(nums[i] > nums[ind]){
              l = i;            
          }
        }

        swap(nums[ind],nums[l]);
        // reverse the right half of the array
        reverse(nums.begin()+1+ind,nums.end());
        return;
    }
};