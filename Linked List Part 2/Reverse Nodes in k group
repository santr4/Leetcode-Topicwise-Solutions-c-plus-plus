/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

// class Solution {
// public:

//     int lengthofLinkedlist(ListNode* head){
//         int count = 0;
//         while(head != NULL){
//             count++;
//             head = head->next;
//         }
//         return count;
//     }

//     ListNode* reverseKGroup(ListNode* head, int k) {
//         if(head == NULL || head->next == NULL){
//             return head;
//         }

//         int l = lengthofLinkedlist(head);

//         ListNode* dummyhead = new ListNode(0);
//         dummyhead->next = head;

//         ListNode* prev = dummyhead;
//         ListNode* curr;
//         ListNode* nex;

//         while(l >= k){
//             curr = prev->next;
//             nex = curr->next;
//             for(int i = 1;i < k;i++){
//                 curr->next = nex->next;
//                 nex->next = prev->next;
//                 prev->next = nex;
//                 nex = curr->next;
//             }
//             prev = curr;
//             l -= k;
//         }

//         return dummyhead->next;
//     }
// };