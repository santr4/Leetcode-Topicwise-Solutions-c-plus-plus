/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* temp = head;
        int count = 0;
        while(temp != NULL){
            count++;
            temp = temp->next;
        }
        int l = count; // number of nodes in linked list.
        int nodefromBeginning = l-n+1;
        ListNode* prev = NULL;
        ListNode* temp1 = head;
        for(int i = 1;i < nodefromBeginning;i++){
            prev = temp1;
            temp1 = temp1->next;
        }
        if(prev == NULL){
            head = head->next;
            return head;
        }
        else{
            prev->next = prev->next->next;
            return head;
        }
    }
};